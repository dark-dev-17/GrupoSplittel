@model EcomDataProccess.Ecom_HomeAnuncio
@using Microsoft.AspNetCore.Http;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Editar slide: " + Model.Descipcion;
    EcommerceAdmin.Models.Ecommerce ecommerce = new Ecommerce(HttpContextAccessor.HttpContext.Session);
    ecommerce.StartLib(LibraryEcommerce.SAPBussinessOne);
    ecommerce.StartLib(LibraryEcommerce.Ecommerce);
    ecommerce.sAPData.OpenConnection(SAPDataProcess.ConnectionSAP.Database);
    SAPDataProcess.SAP_VendorGroup SAP_VendorGroup_ = (SAPDataProcess.SAP_VendorGroup)ecommerce.sAPData.GetObject(SAPDataProcess.SAPDataBaseObj.VendorGroup);
    List<SAPDataProcess.SAP_VendorGroup> List = SAP_VendorGroup_.Get();
    ecommerce.sAPData.CloseConnection(SAPDataProcess.ConnectionSAP.Database);

    ecommerce.ecomData.Connect(EcomDataProccess.ServerSource.Splitnet);
    bool CtrlPublic = ecommerce.ValidActionUser(52);
    bool CtrlDirigidos = ecommerce.ValidActionUser(51);
    // bool CtrlOrder = ecommerce.ValidActionUser(53);
    ecommerce.ecomData.Disconect(EcomDataProccess.ServerSource.Splitnet);
}
<link href="~/lib/select2/css/select2.css" rel="stylesheet" type="text/css" />
<div id="app_anuncioEdit">
    <div class="br-section-wrapper">
        <div class="table-wrapper">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <ul class="nav nav-outline active-info flex-column flex-md-row">
                                <li class="nav-item">
                                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#Detalle" role="tab" aria-controls="home" aria-selected="true">Detalle</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#Imagenes" role="tab" aria-controls="profile" aria-selected="false">Imagenes</a>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body">
                            <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade show active" id="Detalle" role="tabpanel" aria-labelledby="home-tab">
                                    <form asp-action="Edit" enctype="multipart/form-data">
                                        <div asp-validation-summary="ModelOnly" class="text-danger">
                                        </div>
                                        <table class="table  table-sm">
                                            <tr>
                                                <td><strong><label asp-for="Descipcion" class="control-label"></label></strong></td>
                                                <td colspan="3">
                                                    <input asp-for="Id" type="hidden" class="form-control" />
                                                    <input asp-for="Descipcion" class="form-control" />
                                                    <span asp-validation-for="Descipcion" class="text-danger"></span>
                                                </td>
                                                <td><strong><label asp-for="ShowBy" class="control-label"></label></strong></td>
                                                <td colspan="3">
                                                    <select asp-for="ShowBy" id="ShowBy" v-on:change="CheckRule()" class="form-control">
                                                        @if (CtrlDirigidos)
                                                        {
                                                            <option value="B2C">Clientes B2C</option>
                                                            <option value="B2B">Clientes B2B</option>
                                                        }
                                                        @if (CtrlPublic)
                                                        {
                                                            <option value="PUBLIC">Publico</option>
                                                        }
                                                    </select>
                                                    <span asp-validation-for="ShowBy" class="text-danger"></span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td><strong><label asp-for="ImgSmallLink" class="control-label"></label></strong></td>
                                                <td colspan="2">
                                                    <input type="text" asp-for="ImgSmallLink" class="form-control" />
                                                    <span asp-validation-for="ImgSmallLink" class="text-danger"></span>
                                                </td>
                                                <td><strong><label asp-for="ImgSmallLinkNewTab" class="control-label"></label><input asp-for="ImgSmallLinkNewTab" class="form-control" /></strong></td>
                                                <td><strong><label asp-for="ImgLargeLink" class="control-label"></label></strong></td>
                                                <td colspan="2">
                                                    <input type="text" asp-for="ImgLargeLink" class="form-control" />
                                                    <span asp-validation-for="ImgLargeLink" class="text-danger"></span>
                                                </td>
                                                <td><strong><label asp-for="ImgLargeLinkNewTab" class="control-label"></label><input asp-for="ImgLargeLinkNewTab" class="form-control" /></strong></td>

                                            </tr>
                                            <tr>
                                                <td><strong><label asp-for="IsActive" class="control-label"></label></strong></td>
                                                <td colspan="3" align="left">
                                                    <input asp-for="IsActive" class="form-control" />
                                                    <span asp-validation-for="IsActive" class="text-danger"></span>
                                                </td>
                                                <td><strong v-if="dirigido == true"><label asp-for="Categoria" class="control-label"></label></strong></td>
                                                <td colspan="3" align="left">
                                                    <select v-if="dirigido == true" asp-for="Categoria" class="form-control">
                                                        <option selected="selected" value="">Sin categoria</option>
                                                        <option value="A">A</option>
                                                        <option value="B">B</option>
                                                        <option value="C">C</option>
                                                        <option value="D">D</option>
                                                        <option value="E">E</option>
                                                    </select>
                                                    <span asp-validation-for="Categoria" class="text-danger"></span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td><strong v-if="dirigido == true"><label asp-for="Group" class="control-label"></label></strong></td>
                                                <td colspan="7">
                                                    <select v-if="dirigido == true" multiple="multiple" class=" form-control" id="example-getting-started" asp-for="GroupoCode" asp-items="@(new SelectList(List,"GroupCode","GroupName",null))"></select>
                                                    <span asp-validation-for="GroupoCode" class="text-danger"></span>
                                                </td>
                                            </tr>
                                        </table>
                                        <div class="form-group  float-right">
                                            <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                                            <input type="submit" value="Guardar cambios" class="btn btn-success" />
                                        </div>
                                    </form>
                                </div>
                                <div class="tab-pane fade show " id="Imagenes" role="tabpanel" aria-labelledby="home-tab">
                                    <div class="row">
                                        <div class="media-body mg-l-20 border p-3 col-lg-6">
                                            <div class="d-flex justify-content-between mg-b-10">
                                                <div class="col-12">
                                                    <nav class="navbar navbar-light bg-light justify-content-between">
                                                        <a class="navbar-brand"><label asp-for="ImgSmall_" class="control-label"></label></a>
                                                        <form class="form-inline">
                                                            <button type="button" v-on:click="UploadImage('left')" class="btn btn-outline-success my-2 my-sm-0">Subir imagen</button>
                                                        </form>
                                                    </nav>
                                                </div>
                                            </div><!-- d-flex -->
                                            <img v-if="imageData != ''" :src="imageData" style="height:250px;" class="img-fluid mg-b-20" alt="">
                                            <div v-if="imageData != ''" class="media-footer">
                                                <span>{{ imgLeft }}</span>
                                                <div>

                                                    <a href="#" v-on:click="RenameImage('left')" class="btn btn-sm btn-secondary" title="Renombrar imagen">Renombrar</a>
                                                    <a :href="imageData" target="_blank" class="btn btn-sm btn-secondary">Ver</a>
                                                </div>
                                            </div><!-- d-flex -->
                                        </div>
                                        <div class="media-body mg-l-20 border p-3 col-lg-6">
                                            <div class="d-flex justify-content-between mg-b-10">
                                                <div class="col-12">
                                                    <nav class="navbar navbar-light bg-light justify-content-between">
                                                        <a class="navbar-brand"><label asp-for="ImgLarge_" class="control-label"></label></a>
                                                        <form class="form-inline">
                                                            <button type="button" v-on:click="UploadImage('left')" class="btn btn-outline-success my-2 my-sm-0">Subir imagen</button>
                                                        </form>
                                                    </nav>
                                                </div>
                                            </div><!-- d-flex -->
                                            <img v-if="imageData2 != ''" :src="imageData2" style="height:250px;" class="img-fluid mg-b-20" alt="">
                                            <div v-if="imageData2 != ''" class="media-footer">
                                                <span>{{ imgRight }}</span>
                                                <div>

                                                    <a href="#" v-on:click="RenameImage('right')" class="btn btn-sm btn-secondary" title="Renombrar imagen">Renombrar</a>
                                                    <a :href="imageData2" target="_blank" class="btn btn-sm btn-secondary">Ver</a>
                                                </div>
                                            </div><!-- d-flex -->
                                        </div>
                                    </div>
                                    <div class="mt-4">
                                        <div class="float-right">
                                            <a asp-action="Index" class="btn btn-secondary">Terminar</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/lib/select2/js/select2.js" type="text/javascript"></script>
    <!-- Initialize the plugin: -->
    <script type="text/javascript">
        $(document).ready(function () {
            $("#example-getting-started").select2({
                tags: true,
                placeholder: 'Select an option',
                tokenSeparators: [',', ' ']
            })
        });
    </script>
    <script>
        var app_anuncioEdit = new Vue({
            el: "#app_anuncioEdit",
            data: {
                imageData: "@Html.Raw(string.Format("{0}/store/public/images/img_spl/slide/img1/{1}",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"],Model.ImgSmall))",
                imageData2: "@Html.Raw(string.Format("{0}/store/public/images/img_spl/slide/img2/{1}",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"],Model.ImgLarge))",
                imgLeft: "@Model.ImgSmall",
                imgRight: "@Model.ImgLarge",
                serverToken: {
                    'RequestVerificationToken': document.querySelector("input[name=__RequestVerificationToken]").value
                },
                dirigido: true
            },
             mounted() {
                this.CheckRule();
            },
            methods: {
                CheckRule: function () {
                    var ShowBy = document.getElementById("ShowBy")
                    if (ShowBy.value == "PUBLIC") {
                        this.dirigido = false;
                    } else {
                        this.dirigido = true;
                    }
                },
                UploadImage: async function (tipe) {
                    const { value: file } = await Swal.fire({
                            title: 'Select image',
                            input: 'file',
                            inputAttributes: {
                                'accept': 'image/*',
                                'aria-label': 'Upload your picture'
                            }
                        })
                        if (file) {
                            let params = new FormData();
                                params.append('Img', file);
                                params.append('Id', '@Model.Id');
                                params.append('type', tipe);
                            await axios.post('@Url.Action("EditChangeImg","HomeAnuncio")', params, { headers: this.serverToken }).then(response => {
                                this.ShowMessageErrorShort(response.data, 'success')
                                if (tipe == "left") {
                                   this.imageData = "@Html.Raw(string.Format("{0}/store/public/images/img_spl/slide/img1/",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"]))" + file.name
                                    this.imgLeft = file.name
                                }
                                if (tipe == "right") {
                                     this.imageData2 = "@Html.Raw(string.Format("{0}/store/public/images/img_spl/slide/img2/",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"]))" + file.name
                                     this.imgRight = file.name
                                };
                                const reader = new FileReader()
                                reader.onload = (e) => {
                                    Swal.fire({
                                        title: 'Your uploaded picture',
                                        imageUrl: e.target.result,
                                        imageAlt: 'The uploaded picture'
                                    })
                                }
                                reader.readAsDataURL(file)
                            }).catch(error => {
                                this.ShowMessageErrorShort(error.response.data,'error')
                            }).finally(() => this.newName = "")
                        }
                },
                RenameImage: async function (tipe) {
                     Swal.fire({
                            title: 'Nuevo nombre del archivo',
                            input: 'text',
                            inputAttributes: {
                                autocapitalize: 'off'
                            },
                            showCancelButton: true,
                            confirmButtonText: 'Renombrar',
                            showLoaderOnConfirm: true,
                            preConfirm: (login) => {
                                this.newName = login
                                var params = new URLSearchParams();
                                params.append('NewName', '' + login);
                                params.append('Id', '@Model.Id');
                                params.append('type', tipe);
                                return axios.post('@Url.Action("EditRenameImg","HomeAnuncio")', params, { headers: this.serverToken }).then(response => {
                                    return response.data;
                                }).catch(error => {
                                    this.ShowMessageErrorShort(error.response.data,'error')
                                })
                            },
                            allowOutsideClick: () => !Swal.isLoading()
                        }).then((result) => {
                            if (result.value) {
                                if (tipe == "left") {
                                    this.imageData = "@Html.Raw(string.Format("{0}/store/public/images/img_spl/slide/img1/",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"]))" + this.newName + "." + this.imgLeft.split(".")[1]
                                    this.imgLeft = this.newName + "." + this.imgLeft.split(".")[1]
                                }
                                if (tipe == "right") {
                                    this.imageData2 = "@Html.Raw(string.Format("{0}/store/public/images/img_spl/slide/img2/",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"]))" + this.newName + "." + this.imgLeft.split(".")[1]
                                     this.imgRight = this.newName + "." + this.imgLeft.split(".")[1]
                                }
                                this.ShowMessageErrorShort(result.value,'success')
                            }
                            console.log(result)
                        })
                },
                ShowMessageErrorShort: function (text,icon) {
                        const Toast = Swal.mixin({
                              toast: true,
                              position: 'top-end',
                              showConfirmButton: false,
                              timer: 4000,
                              timerProgressBar: true,
                              onOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                              }
                            })

                            Toast.fire({
                              icon: icon,
                              title: text
                            })
                    },
                }
        });

    </script>
}