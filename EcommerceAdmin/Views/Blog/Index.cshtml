@model IEnumerable<EcomDataProccess.Ecom_Blog>
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@{
    int UserId = (int)HttpContextAccessor.HttpContext.Session.GetInt32("USR_IdSplinnet");
    ViewData["Title"] = "Blogs";
    bool EditCtrl = new EcommerceAdmin.Models.Ecom_SAP().ValidAction(UserId, new int[] { 37 });
    //bool CtrlActiveProximamente = new EcommerceAdmin.Models.Ecom_SAP().ValidAction(UserId, new int[] { 29 });

}
    <div id="app_blog">
        <nav class="navbar navbar-light bg-light justify-content-between">
            <a class="navbar-brand">@Html.ActionLink("Agregar", "Create", "Blog", null, new { @class = "btn btn-sm btn-secondary" })</a>
        </nav>
        <div class="br-section-wrapper">
            <div class="table-wrapper">
                <table class="table display responsive nowrap " id="table_app_blog" style="width: 100%;">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Title)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Comillas)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DateBlog)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsActiveEcommerce)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <a target="_blank" title="ver en E-commerce" href="@Html.Raw(string.Format("{0}/fibra-optica/views/Blog/detalle.php?id={1}&nom={2}",System.Configuration.ConfigurationManager.AppSettings["Ecommerce_Domain"],item.Id,item.Comillas))">@Html.DisplayFor(modelItem => item.Title)</a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Comillas)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateBlog)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsActiveEcommerce)
                                </td>
                                <td>
                                    @if (EditCtrl)
                                    {
                                        @Html.ActionLink("Editar", "Edit", new { id = item.Id }) <span>|</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
@section Scripts {
    <script>
        var app_blog = new Vue({
            el: "#app_blog",
            data: {
                serverToken: {
                    'RequestVerificationToken': document.querySelector("input[name=__RequestVerificationToken]").value
                },
            },
            mounted() {
                $('.table').DataTable({
                    "order": []
                });
            },
            methods: {
                ShowMessageErrorShort: function (text, icon) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 4000,
                        timerProgressBar: true,
                        onOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: icon,
                        title: text
                    })
                },
            }
        });
    </script>
}
