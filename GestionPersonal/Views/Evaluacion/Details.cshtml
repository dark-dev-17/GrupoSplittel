@model GPSInformation.Models.Evaluacion

@{
    ViewData["Title"] = "Details";
    List<GPSInformation.Models.EvaluacioSeccion> secciones = ViewBag.Preguntas;
    List<GPSInformation.Models.EvaluacionEmpleado> view_Empleados = (List<GPSInformation.Models.EvaluacionEmpleado>)ViewBag.Participantes;
    List<GPSInformation.Models.EvaluacionRespuestas> respuestas = (List<GPSInformation.Models.EvaluacionRespuestas>)ViewBag.Respuestas;
    int Preguntas = 1;
    List<string> Indices;
    List<string> Valores;
    List<string> Limites;
}

<div class="d-sm-flex align-items-center justify-content-between">
    <div>
        <h2 class="mg-b-5">@Html.DisplayNameFor(model => model.Nombre)</h2>  <small>@Html.DisplayFor(model => model.PersonaName)</small>
        <p class="mg-b-0 tx-color-03">@Html.DisplayFor(model => model.InicioHora)<span>-</span>@Html.DisplayFor(model => model.FinHora)</p>
        <p class="mg-b-0 tx-color-03">@Html.DisplayFor(model => model.ModalidadName)</p>
    </div>
    <div class="mg-t-20 mg-sm-t-0">
        @*<button class="btn btn-white"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-printer mg-r-5"><polyline points="6 9 6 2 18 2 18 9"></polyline><path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path><rect x="6" y="14" width="12" height="8"></rect></svg> Print</button>*@
        @*<button class="btn btn-primary mg-l-5"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-credit-card mg-r-5"><rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line></svg> Pay</button>*@
    </div>
</div>
<hr />

<div data-label="Preguntas dashboard" class="df-example demo-forms" id="app_createPermiso">
    @foreach (var seccion in secciones)
    {
        <div class="card mg-b-20 mg-lg-b-25">
            <div class="card-header pd-y-15 pd-x-20 d-flex align-items-center justify-content-between">
                <h6 class="tx-uppercase tx-semibold mg-b-0">@seccion.Nombre</h6>
                @*<nav class="nav nav-with-icon tx-13">
                        <a href="" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg> Add New</a>
                    </nav>*@
            </div><!-- card-header -->
            <div class="card-body pd-25 row">
                <div class="col-lg-8">
                    <nav class="nav nav-classic tx-13">
                        @foreach (var pregunta in seccion.Preguntas)
                        {
                            @if (pregunta.Tipo == 1)
                            {
                                <a href="#" class="nav-link">
                                    @Preguntas .- <span>@pregunta.Pregunta</span>
                                    <span class="badge">
                                        @Html.Raw(respuestas.Where(a => a.IdEvaluacionSeccionPregnts == pregunta.IdEvaluacionSeccionPregnts).Sum(a => Int32.Parse(a.Respuesta)))/<strong>@Html.Raw(pregunta.MaxCalificacion * view_Empleados.Count)</strong>
                                    </span>
                                </a>
                            }
                            else
                            {
                                <a href="#" class="nav-link">
                                    @Preguntas .- <span>@pregunta.Pregunta</span>
                                </a>
                                <br />
                                <ul>
                                    @foreach (var a in respuestas.Where(a => a.IdEvaluacionSeccionPregnts == pregunta.IdEvaluacionSeccionPregnts && a.Respuesta != "").ToList())
                                    {
                                        <li>
                                            @Html.Raw(string.IsNullOrEmpty(a.Respuesta) ? "Sin respuesta" : a.Respuesta)
                                        </li>
                                    }
                                </ul>
                            }
                            Preguntas++;
                        }
                    </nav>
                </div>
                <div class="col-lg-4">
                    <canvas id="@Html.Raw(seccion.IdEvaluacioSeccion+"_Seccion")"></canvas>
                </div>
            </div>
        </div>

    }
</div>
<div data-label="Participantes" class="df-example demo-forms mt-3" id="app_createPermiso">
    <div class="d-flex align-items-center justify-content-between mg-b-30 ">
        <h2 class="tx-15 mg-b-0">Lista de participantes</h2>
        <div class="btn-group text-right" role="group" aria-label="Basic example">
            <a href="#modalActividadVacacionesPeriodos" data-toggle="modal" class="btn btn-sm btn-white d-flex align-items-center"><i class="icon ion-md-time mg-r-5 tx-16 lh--9"></i>Agregar nuevo participante</a>
        </div>
    </div>
    <hr />
    <table class="table">
        <thead>
            <tr>
                <th>Empleado</th>
                <th>Correo</th>
                <th>Antiguedad</th>
                <th>Contestó</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in view_Empleados)
            {
                <tr>
                    <td>@emp.EmpleadoDatos.NombreCompleto</td>
                    <td>@emp.EmpleadoDatos.Correo</td>
                    <td>@emp.EmpleadoDatos.Antiguedad</td>
                    <td>
                        @if (@emp.Respondio)
                        {
                            <span class="badge badge-success">Contestada</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Sin responder</span>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "DeleteParticipante", "Evaluacion", new { IdEvaluacion = Model.IdEvaluacion, IdPersona = emp.IdPersona })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="modal calendar-modal-create fade effect-scale" id="modalActividadVacacionesPeriodos" role="dialog" data-backdrop="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body pd-20 pd-sm-30">
                <button type="button" class="close pos-absolute t-20 r-20" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i data-feather="x"></i></span>
                </button>
                <h5 class="tx-18 tx-sm-20 mg-b-20 mg-sm-b-30">Periodos de vacaciones</h5>

                <div id="content_vacacionesAcitivit">
                    <form asp-action="AddParticipante">
                        <div class="form-group">
                            <label>Empleado</label>
                            <input type="hidden" name="IdEvaluacion" value="@Model.IdEvaluacion" />
                            <select name="IdPersona" asp-items="ViewBag.Empleados" class="form-control">
                                <option value="0">Selecciona una opción</option>
                            </select>
                        </div>
                        <div class="form-group row mg-b-0">
                            <div class="col-sm-12 text-right">
                                <a data-dismiss="modal" class="btn btn-sm btn-secondary">Cancelar</a>
                                <button type="submit" class="btn btn-sm btn-primary">Agregar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div><!-- modal-body -->
        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div><!-- modal -->
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{
        Preguntas = 1;
        int Max = 0;
    }
    @foreach (var seccion in secciones)
    {
        Indices = new List<string>();
        Limites = new List<string>();
        Valores = new List<string>();
        @foreach (var pregunta in seccion.Preguntas)
        {
            if(pregunta.Tipo == 1)
            {
                var valor = respuestas.Where(a => a.IdEvaluacionSeccionPregnts == pregunta.IdEvaluacionSeccionPregnts).Sum(a => Int32.Parse(a.Respuesta));
                Indices.Add(string.Format("{0}", Preguntas));
                Valores.Add(string.Format("{0}", valor));
                Limites.Add(string.Format("{0}", (pregunta.MaxCalificacion * view_Empleados.Count)));
                if(pregunta.MaxCalificacion * view_Empleados.Count > Max)
                {
                    Max = pregunta.MaxCalificacion * view_Empleados.Count;
                }
            }
            Preguntas++;
        }
<script>

            var ctxLabel = [@string.Join(",", Indices)];
            var ctxData1 = [@string.Join(",", Valores)];
            var ctxData2 = [@string.Join(",", Limites)];
    var ctx1 = document.getElementById('@Html.Raw(seccion.IdEvaluacioSeccion+"_Seccion")').getContext('2d');
    new Chart(ctx1, {
        type: 'horizontalBar',
        data: {
            labels: ctxLabel,
            datasets: [
                {
                    data: ctxData1,
                    backgroundColor: '#69b2f8'
                },
                {
                    data: ctxData2,
                    backgroundColor: '#d1e6fa'
                }
            ]
        },
        options: {
            maintainAspectRatio: false,
            responsive: true,
            legend: {
                display: false,
                labels: {
                    display: false
                }
            },
            scales: {
                yAxes: [{
                    gridLines: {
                        display: false
                    },
                    ticks: {
                        display: false,
                        beginAtZero: true,
                        fontSize: 10,
                        fontColor: '#182b49'
                    }
                }],
                xAxes: [{
                    gridLines: {
                        display: true,
                        color: '#eceef4'
                    },
                    barPercentage: 0.6,
                    ticks: {
                        beginAtZero: true,
                        fontSize: 10,
                        fontColor: '#8392a5',
                        max: @Max
                    }
                }]
            }
        }
    });
</script>
    }


}
